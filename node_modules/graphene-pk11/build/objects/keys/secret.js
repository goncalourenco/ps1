"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const key_1 = require("./key");
class SecretKey extends key_1.Key {
    get sensitive() {
        return this.get("sensitive");
    }
    set sensitive(v) {
        this.set("sensitive", v);
    }
    get encrypt() {
        try {
            return this.get("encrypt");
        }
        catch (err) {
            return false;
        }
    }
    set encrypt(v) {
        this.set("encrypt", v);
    }
    get decrypt() {
        try {
            return this.get("decrypt");
        }
        catch (err) {
            return false;
        }
    }
    set decrypt(v) {
        this.set("decrypt", v);
    }
    get verify() {
        try {
            return this.get("verify");
        }
        catch (err) {
            return false;
        }
    }
    set verify(v) {
        this.set("verify", v);
    }
    get sign() {
        try {
            return this.get("sign");
        }
        catch (err) {
            return false;
        }
    }
    set sign(v) {
        this.set("sign", v);
    }
    get wrap() {
        try {
            return this.get("wrap");
        }
        catch (err) {
            return false;
        }
    }
    set wrap(v) {
        this.set("wrap", v);
    }
    get unwrap() {
        try {
            return this.get("unwrap");
        }
        catch (err) {
            return false;
        }
    }
    set unwrap(v) {
        this.set("unwrap", v);
    }
    get extractable() {
        return this.get("extractable");
    }
    set extractable(v) {
        this.set("extractable", v);
    }
    get alwaysSensitive() {
        return this.get("alwaysSensitive   ");
    }
    set alwaysSensitive(v) {
        this.set("alwaysSensitive", v);
    }
    get neverExtractable() {
        return this.get("neverExtractable");
    }
    set neverExtractable(v) {
        this.set("neverExtractable", v);
    }
    get checkValue() {
        return this.get("checkValue");
    }
    set checkValue(v) {
        this.set("checkValue", v);
    }
    get wrapTrusted() {
        return this.get("wrapWithTrusted");
    }
    set wrapTrusted(v) {
        this.set("wrapWithTrusted", v);
    }
    get trusted() {
        return this.get("trusted");
    }
    set trusted(v) {
        this.set("trusted", v);
    }
    get wrapTemplate() {
        throw new Error("Not implemented");
    }
    set wrapTemplate(v) {
        throw new Error("Not implemented");
    }
    get unwrapTemplate() {
        throw new Error("Not implemented");
    }
    set unwrapTemplate(v) {
        throw new Error("Not implemented");
    }
}
exports.SecretKey = SecretKey;
